// Currently not used at all

ext.apacheLog4jExtrasVersion='1.1'; // U
ext.commonsBeanUtilsVersion='1.9.1'; // U
ext.commonsLang3Version='3.1';
ext.commonsCliVersion='1.2';
ext.derbyVersion = '10.10.1.1';
ext.eclipseLinkVersion = '2.4.1';
ext.groovyVersion='2.4.3';            // U
ext.guavaVersion='16.0.1'; // U
ext.h2Version='1.3.175'; // U
ext.hamcrestVersion='1.3'; // U
ext.hibernateJpa20ApiVersion='1.0.1.Final'; // U
ext.hibernateVersion = '4.1.12.Final'; // when switching to 4.3, update hibernateJpa! // U
ext.javamelodyVersion='1.50';
ext.javaxFacesVersion='2.2.4';
ext.javaxServletApiVersion='3.0.1'; // U
ext.jrobinVersion='1.5.9';
ext.jstlVersion='1.1.2'; // U
ext.junitVersion = '4.12'; // U
ext.log4jVersion='2.0';
ext.log4j12Version='1.2.17'; // U
ext.logbackVersion='1.1.2';
ext.lombokVersion='1.12.4'; // U
ext.perfidixVersion='3.6.9'; // U
ext.slf4jVersion='1.7.7';
ext.spockVersion='1.0-groovy-2.4'; // U
ext.springBootVersion="1.2.5.RELEASE"; // U
ext.springDataVersion="1.8.1.RELEASE"; // U
ext.springVersion='4.1.7.RELEASE'; // U
ext.tomcatVersion='7.0.50';

// Originally, we defined the artifact like this:
//     ext.springOrm="org.springframework:spring-orm:${springVersion}";
// Within the "build.gradle" files, you'd refer to them like this:
//     compile springOrm
// The drawback of this approach is the fact that it isn't easy to override the
// version of the artifact.
//
// To overcome this limitation, we define the artifact like this:
//     ext.springOrm={ it -> return "org.springframework:spring-orm:${it?:springVersion}"; }
// Within the "build.gradle" files, you'll refer to them like this:
//     compile springOrm()
// or
//     compile springOrm("3.2.13.RELEASE")
// or
//     springVersion="3.2.13.RELEASE"
//     compile springOrm()
ext.apacheLog4jExtras = { it -> return "log4j:apache-log4j-extras:${it?:apacheLog4jExtrasVersion}"; } // U
ext.commonsBeanutils={ it -> return "commons-beanutils:commons-beanutils:${it?:commonsBeanUtilsVersion}"; } // U
ext.commonsCli={ it -> return "commons-cli:commons-cli:${it?:commonsCliVersion}"; }
ext.commonsLang3={ it -> return "org.apache.commons:commons-lang3:${it?:commonsLang3Version}"; }
ext.derby={ it -> return "org.apache.derby:derby:${it?:derbyVersion}"; }
ext.derbyclient={ it -> return "org.apache.derby:derbyclient:${it?:derbyVersion}"; }
ext.eclipsePersistenceJpa={ it -> return "org.eclipse.persistence:org.eclipse.persistence.jpa:${it?:eclipseLinkVersion}"; }
ext.groovyAll={ it -> return "org.codehaus.groovy:groovy-all:${it?:groovyVersion}"; } // U
ext.guava={ it -> return "com.google.guava:guava:${it?:guavaVersion}"; }
ext.h2={ it -> return "com.h2database:h2:${it?:h2Version}"; } // U
ext.hamcrestAll={ it -> return "org.hamcrest:hamcrest-all:${it?:hamcrestVersion}"; } // U
ext.hibernateEntitymanager={ it -> return "org.hibernate:hibernate-entitymanager:${it?:hibernateVersion}"; } // U
ext.hibernateJpa20Api={ it -> return "org.hibernate.javax.persistence:hibernate-jpa-2.0-api:${it?:hibernateJpa20ApiVersion}"; } // U
ext.javamelody={ it -> return "net.bull.javamelody:javamelody-core:${it?:javamelodyVersion}"; }
ext.javaxFaces={ it -> return "org.glassfish:javax.faces:${it?:javaxFacesVersion}"; }
ext.javaxServletApi={ it -> return "javax.servlet:javax.servlet-api:${it?:javaxServletApiVersion}"; }
ext.jrobin={ it -> return "org.jrobin:jrobin:${it?:jrobinVersion}"; }
ext.jstl={ it -> return "javax.servlet:jstl:${it?:jstlVersion}"; } // U
ext.junit={ it -> return "junit:junit:${it?:junitVersion}"; } // U
ext.log4j12={ it -> return "log4j:log4j:${it?:log4j12Version}"; } // U
ext.log4jApi={ it -> return "org.apache.logging.log4j:log4j-api:${it?:log4jVersion}"; }
ext.log4jCore={ it -> return "org.apache.logging.log4j:log4j-core:${it?:log4jVersion}"; }
ext.log4jSlf4jImpl={ it -> return "org.apache.logging.log4j:log4j-slf4j-impl:${it?:log4jVersion}"; }
ext.logbackClassic={ it -> return "ch.qos.logback:logback-classic:${it?:logbackVersion}"; }
ext.logbackCore={ it -> return "ch.qos.logback:logback-core:${it?:logbackVersion}"; }
ext.lombok={ it -> return "org.projectlombok:lombok:${it?:lombokVersion}"; } // U
ext.perfidix={ it -> return "org.perfidix:perfidix:${it?:perfidixVersion}"; } // U
ext.slf4jApi={ it -> return "org.slf4j:slf4j-api:${it?:slf4jVersion}"; }
ext.slf4jLog4j12={ it -> return "org.slf4j:slf4j-log4j12:${it?:slf4jVersion}"; }
ext.spockCore={ it -> return "org.spockframework:spock-core:${it?:spockVersion}"; } // U
ext.springBeans={ it -> return "org.springframework:spring-beans:${it?:springVersion}"; } // U
ext.springBootGradlePlugin={ it -> return "org.springframework.boot:spring-boot-gradle-plugin:${it?:springBootVersion}"; } // U
ext.springBootStarterActuator={ it -> return "org.springframework.boot:spring-boot-starter-actuator:${it?:springBootVersion}"; } // U
ext.springBootStarterTest={ it -> return "org.springframework.boot:spring-boot-starter-test:${it?:springBootVersion}"; } // U
ext.springBootStarterTomcat={ it -> return "org.springframework.boot:spring-boot-starter-tomcat:${it?:springBootVersion}"; } // U
ext.springBootStarterWeb={ it -> return "org.springframework.boot:spring-boot-starter-web:${it?:springBootVersion}"; }     // U
ext.springContext={ it -> return "org.springframework:spring-context:${it?:springVersion}"; } // U
ext.springCore={ it -> return "org.springframework:spring-core:${it?:springVersion}"; } // U
ext.springDataJpa={ it -> return "org.springframework.data:spring-data-jpa:${it?:springDataVersion}"; } // U
ext.springJdbc={ it -> return "org.springframework:spring-jdbc:${it?:springVersion}"; } // U
//ext.springOrm="org.springframework:spring-orm:${springVersion}"; // U
ext.springOrm={ it -> return "org.springframework:spring-orm:${it?:springVersion}"; }
ext.springTx={ it -> return "org.springframework:spring-tx:${it?:springVersion}"; } // U
ext.springTest={ it -> return "org.springframework:spring-test:${it?:springVersion}"; } // U
ext.springWeb={ it -> return "org.springframework:spring-web:${it?:springVersion}"; } // U
ext.tomcatEmbedCore={ it -> return "org.apache.tomcat.embed:tomcat-embed-core:${it?:tomcatVersion}"; }
ext.tomcatEmbedJasper={ it -> return "org.apache.tomcat.embed:tomcat-embed-jasper:${it?:tomcatVersion}"; } // U
ext.tomcatEmbedLoggingJuli={ it -> return "org.apache.tomcat.embed:tomcat-embed-logging-juli:${it?:tomcatVersion}"; }
ext.tomcatJspApi={ it -> return "org.apache.tomcat:tomcat-jsp-api:${it?:tomcatVersion}"; }
ext.tomcatJasper={ it -> return "org.apache.tomcat:tomcat-jasper:${it?:tomcatVersion}"; }
ext.tomcatJasperEl={ it -> return "org.apache.tomcat:tomcat-jasper-el:${it?:tomcatVersion}"; }
